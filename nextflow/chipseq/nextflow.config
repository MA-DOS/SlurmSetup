/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Nextflow config file for a 3 Node Home-Cluster for the SLURM login node
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Author: Niklas Fomin
Mail: niklas.fomin@campus.tu-berlin.de 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


process {
    maxRetries = 3
    executor = 'slurm'
    queue = 'nf-core'
    cpus = 2
    memory = '4 GB'
    time = '2h'
}


/*
singularity {
    enabled = true
    autoMount = true
    cacheDir   = "/mnt/shared/nf-core/singularity_cache"
}
*/
/*
docker {
    enabled = true
}

executor {
    name = 'slurm'
    queueSize = 100
    perCpuMemAllocation = true
}

trace {
    enabled = true
    sep = ';'
    raw = true
    file = 'data/output/trace.csv'
    fields = 'task_id,hostname,hash,native_id,process,tag,name,status,exit,module,container,cpus,time,disk,memory,attempt,submit,start,complete,duration,realtime,queue,%cpu,%mem,rss,vmem,peak_rss,peak_vmem,rchar,wchar,syscr,syscw,read_bytes,write_bytes,vol_ctxt,inv_ctxt,workdir,scratch,error_action'
}

cleanup = true

dag {
    enabled = true
    file = 'data/output/dag.html'
}

profiles {
    debug {
        cleanup = false
    }
}

*/

/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Nextflow config file for a 3 Node Home-Cluster for the SLURM login node
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Author: Niklas Fomin
Mail: niklas.fomin@campus.tu-berlin.de 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
*/

process {
    maxRetries = 3
    executor = 'slurm'
    queue = 'nf-core'
    cpus = 2
    memory = '4 GB'
    time = '2h'
    errorStrategy = 'retry'
}

/*
singularity {
    enabled = true
    autoMount = true
    cacheDir   = "/mnt/shared/nf-core/singularity_cache"
}
*/

docker {
    enabled = true
    runOptions = '--cpus=2'
}

executor {
    name = 'slurm'
    queueSize = 100
    perCpuMemAllocation = true
    submitRateLimit = '100/sec'
}

trace {
    enabled = true
    sep = ';'
    raw = true
    file = 'data/output/trace.csv'
    fields = 'task_id,hostname,hash,native_id,process,tag,name,status,exit,module,container,cpus,time,disk,memory,attempt,submit,start,complete,duration,realtime,queue,%cpu,%mem,rss,vmem,peak_rss,peak_vmem,rchar,wchar,syscr,syscw,read_bytes,write_bytes,vol_ctxt,inv_ctxt,workdir,scratch,error_action'
}

cleanup = true

// dag {
//     enabled = true
//     file = 'data/output/dag.gexf'
// }

profiles {
    debug {
        cleanup = false
    }

    low {
        process {
            cpus = 1
            memory = '2 GB'
            time = '30m'
        }
    }

    medium {
        process {
            cpus = 4
            memory = '8 GB'
            time = '4h'
        }
    }

    high {
        process {
            cpus = 6
            memory = '16 GB'
            time = '12h'
        }
    }

    gang {
        process {
            cpus = 1
            memory = '1 GB'
            time = '15m'
        }
    }
}

trace.overwrite = true
dag.overwrite = true
